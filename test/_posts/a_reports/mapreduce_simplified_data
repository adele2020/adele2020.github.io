MapReduce: Simplified Data Processing on Large Clusters

MapReduce is a programming model and an associated implementation for processing and generating large data sets.
Users specify a map function that processes a key/value pair to generate a set of intermediate key/value pairs, and a reduce function that merges all intermediate values associated with the same intermediate key.
Many real world tasks are expressible in this model, as shown in the paper.
Programs written in this functional style are automatically parallelized and executed on a large cluster of commodity machines.
The run-time system takes care of the details of partitioning the input data, scheduling the program’s execution across a set of machines, handling machine failures, and managing the required inter-machine communication.
This allows programmers without any experience with parallel and distributed systems to easily utilize the resources of a large distributed system.
Our implementation of MapReduce runs on a large cluster of commodity machines and is highly scalable:
a typical MapReduce computation processes many terabytes of data on thousands of machines.
Programmers find the system easy to use:
hundreds of MapReduce programs have been implemented and upwards of one thousand MapReduce jobs are executed on Google’s clusters every day.

사용자는 키 / 값 쌍을 처리하여 일련의 중간 키 / 값 쌍을 생성하는 맵 함수와 동일한 중간 키와 관련된 모든 중간 값을 병합하는 축소 함수를 지정합니다.
백서에 표시된 것처럼이 모델에서는 많은 실제 작업을 표현할 수 있습니다.
이 기능적 스타일로 작성된 프로그램은 자동으로 병렬화되고 대규모 상용 기계 클러스터에서 실행됩니다.
런타임 시스템은 입력 데이터를 분할하고, 일련의 컴퓨터에서 프로그램 실행을 예약하고, 컴퓨터 오류를 처리하고, 필요한 컴퓨터 간 통신을 관리하는 세부 정보를 처리합니다.
이를 통해 병렬 및 분산 시스템에 대한 경험이없는 프로그래머는 대규모 분산 시스템의 리소스를 쉽게 활용할 수 있습니다.
MapReduce의 구현은 대규모 상용 기계 클러스터에서 실행되며 확장 성이 뛰어납니다.
일반적인 MapReduce 계산은 수천 대의 컴퓨터에서 수 테라 바이트의 데이터를 처리합니다.
프로그래머는 시스템을 사용하기 쉽다고 생각합니다.
수백 개의 MapReduce 프로그램이 구현되었으며 매일 1,000 개 이상의 MapReduce 작업이 Google의 클러스터에서 실행됩니다.
